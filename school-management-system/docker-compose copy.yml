version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml
      - ./traefik/acme.json:/etc/traefik/acme.json
    networks:
      - traefik_network

  nextjs:
    image: school-management-system-nextjs-atl:${VERSION:-latest}
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-school_db}
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD}@db:5432/${DB_NAME:-school_db}?sslmode=disable
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3005}
      - NODE_ENV=production
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - traefik_network
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextjs.rule=Host(`dorkordi.site`)"
      - "traefik.http.routers.nextjs.entrypoints=websecure"
      - "traefik.http.routers.nextjs.tls.certresolver=letsencrypt"
      - "traefik.http.services.nextjs.loadbalancer.server.port=3000"
      - "traefik.http.routers.nextjs.middlewares=security-headers@file"

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME:-school_db}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-school_db}" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - app-network

volumes:
  postgres-data:
    driver: local

networks:
  traefik_network:
    external: true
  app-network:
    internal: true